# env                         ENV;
# user                        nginx;
# pid                         /var/run/nginx.pid;

worker_processes 4;

events {
    worker_connections 1024;
}

http {
    #See http://blog.argteam.com/coding/hardening-node-js-for-production-part-2-using-nginx-to-avoid-node-js-load
    proxy_cache_path        /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=600m;
    proxy_temp_path         /var/tmp;
    include                 mime.types;
    default_type            application/octet-stream;
    sendfile                on;
    keepalive_timeout       3600;
    gzip                    on;
    gzip_comp_level         6;
    gzip_vary               on;
    gzip_min_length         1000;
    gzip_proxied            any;
    gzip_types              text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_disable "MSIE [1-6]\.";
    gzip_buffers            16 8k;

    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;

    proxy_buffer_size   256k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;
    fastcgi_buffers 32 32k;
    fastcgi_buffer_size 32k;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout;
    error_log  /dev/stdout;

    # Increase POST body size
    client_max_body_size 100M;

    # Include additional configuration files
    include /etc/nginx/sites-enabled/*;
}
# vim: sw=4 sts=4 et ft=nginx

